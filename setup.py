#!/usr/bin/env python3
"""
–®–µ—Ç–ø–µ-–ê“õ—Ç–∞—É –¢–∞–∫—Å–∏ –ë–æ—Ç - –ë–∞—Å—Ç–∞–ø“õ—ã –æ—Ä–Ω–∞—Ç—É —Å–∫—Ä–∏–ø—Ç—ñ
"""

import sqlite3
import sys
import os

def init_database():
    """–î–µ—Ä–µ–∫“õ–æ—Ä–¥—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è–ª–∞—É"""
    print("üìä –î–µ—Ä–µ–∫“õ–æ—Ä “õ“±—Ä—ã–ª—É–¥–∞...")
    
    conn = sqlite3.connect('taxi_bot.db')
    c = conn.cursor()
    
    # –ñ“Ø—Ä–≥—ñ–∑—É—à—ñ–ª–µ—Ä –∫–µ—Å—Ç–µ—Å—ñ
    c.execute('''CREATE TABLE IF NOT EXISTS drivers
                 (user_id INTEGER PRIMARY KEY,
                  full_name TEXT NOT NULL,
                  car_number TEXT NOT NULL,
                  car_model TEXT NOT NULL,
                  total_seats INTEGER NOT NULL,
                  direction TEXT NOT NULL,
                  departure_time TEXT NOT NULL,
                  queue_position INTEGER NOT NULL,
                  is_active INTEGER DEFAULT 0,
                  payment_status INTEGER DEFAULT 0,
                  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP)''')
    
    # –ö–ª–∏–µ–Ω—Ç—Ç–µ—Ä –∫–µ—Å—Ç–µ—Å—ñ
    c.execute('''CREATE TABLE IF NOT EXISTS clients
                 (id INTEGER PRIMARY KEY AUTOINCREMENT,
                  user_id INTEGER UNIQUE NOT NULL,
                  full_name TEXT,
                  phone TEXT,
                  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP)''')
    
    # –ë—Ä–æ–Ω–¥–∞—Ä –∫–µ—Å—Ç–µ—Å—ñ
    c.execute('''CREATE TABLE IF NOT EXISTS bookings
                 (id INTEGER PRIMARY KEY AUTOINCREMENT,
                  client_id INTEGER NOT NULL,
                  driver_id INTEGER NOT NULL,
                  direction TEXT NOT NULL,
                  pickup_location TEXT NOT NULL,
                  dropoff_location TEXT NOT NULL,
                  booking_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                  status TEXT DEFAULT 'active',
                  FOREIGN KEY (client_id) REFERENCES clients(id),
                  FOREIGN KEY (driver_id) REFERENCES drivers(user_id))''')
    
    # –ê–¥–º–∏–Ω–¥–µ—Ä –∫–µ—Å—Ç–µ—Å—ñ
    c.execute('''CREATE TABLE IF NOT EXISTS admins
                 (user_id INTEGER PRIMARY KEY,
                  added_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP)''')
    
    # –¢”©–ª–µ–º–¥–µ—Ä —Ç–∞—Ä–∏—Ö—ã –∫–µ—Å—Ç–µ—Å—ñ
    c.execute('''CREATE TABLE IF NOT EXISTS payment_history
                 (id INTEGER PRIMARY KEY AUTOINCREMENT,
                  driver_id INTEGER NOT NULL,
                  amount INTEGER NOT NULL,
                  payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                  approved_by INTEGER,
                  FOREIGN KEY (driver_id) REFERENCES drivers(user_id),
                  FOREIGN KEY (approved_by) REFERENCES admins(user_id))''')
    
    # –•–∞–±–∞—Ä–ª–∞–º–∞–ª–∞—Ä –∂—É—Ä–Ω–∞–ª—ã
    c.execute('''CREATE TABLE IF NOT EXISTS notification_log
                 (id INTEGER PRIMARY KEY AUTOINCREMENT,
                  user_id INTEGER NOT NULL,
                  message TEXT NOT NULL,
                  sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP)''')
    
    conn.commit()
    conn.close()
    
    print("‚úÖ –î–µ—Ä–µ–∫“õ–æ—Ä —Å”ô—Ç—Ç—ñ “õ“±—Ä—ã–ª–¥—ã!")

def add_admin():
    """–ë—ñ—Ä—ñ–Ω—à—ñ –∞–¥–º–∏–Ω–¥—ñ “õ–æ—Å—É"""
    print("\nüë§ –ê–¥–º–∏–Ω “õ–æ—Å—É")
    print("‚îÄ" * 40)
    
    user_id = input("Telegram User ID –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑: ").strip()
    
    if not user_id.isdigit():
        print("‚ùå “ö–∞—Ç–µ! User ID —Ç–µ–∫ —Å–∞–Ω–¥–∞—Ä–¥–∞–Ω —Ç“±—Ä—É—ã –∫–µ—Ä–µ–∫.")
        return
    
    user_id = int(user_id)
    
    conn = sqlite3.connect('taxi_bot.db')
    c = conn.cursor()
    
    try:
        c.execute("INSERT INTO admins (user_id) VALUES (?)", (user_id,))
        conn.commit()
        print(f"‚úÖ –ê–¥–º–∏–Ω —Å”ô—Ç—Ç—ñ “õ–æ—Å—ã–ª–¥—ã: {user_id}")
        print("\nüí° –ö–µ“£–µ—Å: ”®–∑—ñ“£—ñ–∑–¥—ñ“£ User ID-–¥—ñ –±—ñ–ª—É “Ø—à—ñ–Ω:")
        print("   1. @userinfobot –±–æ—Ç—ã–Ω–∞ ”©—Ç—ñ“£—ñ–∑")
        print("   2. /start –∫–æ–º–∞–Ω–¥–∞—Å—ã–Ω –∂—ñ–±–µ—Ä—ñ“£—ñ–∑")
        print("   3. –ë–æ—Ç —Å—ñ–∑–≥–µ User ID-“£—ñ–∑–¥—ñ –∂—ñ–±–µ—Ä–µ–¥—ñ")
    except sqlite3.IntegrityError:
        print(f"‚ùå –ë“±–ª “õ–æ–ª–¥–∞–Ω—É—à—ã “õ–∞–∑—ñ—Ä–¥—ñ“£ ”©–∑—ñ–Ω–¥–µ –∞–¥–º–∏–Ω: {user_id}")
    finally:
        conn.close()

def check_requirements():
    """“ö–∞–∂–µ—Ç—Ç—ñ –ø–∞–∫–µ—Ç—Ç–µ—Ä–¥—ñ —Ç–µ–∫—Å–µ—Ä—É"""
    print("üì¶ “ö–∞–∂–µ—Ç—Ç—ñ –ø–∞–∫–µ—Ç—Ç–µ—Ä —Ç–µ–∫—Å–µ—Ä—ñ–ª—É–¥–µ...")
    
    required = ['aiogram', 'aiohttp']
    missing = []
    
    for package in required:
        try:
            __import__(package)
            print(f"  ‚úÖ {package}")
        except ImportError:
            print(f"  ‚ùå {package}")
            missing.append(package)
    
    if missing:
        print(f"\n‚ö†Ô∏è  “ö–∞–∂–µ—Ç—Ç—ñ –ø–∞–∫–µ—Ç—Ç–µ—Ä —Ç–∞–±—ã–ª–º–∞–¥—ã: {', '.join(missing)}")
        print("–û—Ä–Ω–∞—Ç—É “Ø—à—ñ–Ω –∫–æ–º–∞–Ω–¥–∞:")
        print(f"  pip install {' '.join(missing)}")
        return False
    
    print("‚úÖ –ë–∞—Ä–ª—ã“õ –ø–∞–∫–µ—Ç—Ç–µ—Ä –æ—Ä–Ω–∞—Ç—ã–ª“ì–∞–Ω!")
    return True

def create_env_file():
    """".env —Ñ–∞–π–ª—ã–Ω “õ“±—Ä—É"""
    print("\n‚öôÔ∏è  .env —Ñ–∞–π–ª—ã “õ“±—Ä—ã–ª—É–¥–∞...")
    
    if os.path.exists('.env'):
        overwrite = input(".env —Ñ–∞–π–ª—ã –±–∞—Ä. “Æ—Å—Ç—ñ–Ω–µ–Ω –∂–∞–∑—É –∫–µ—Ä–µ–∫ –ø–µ? (y/n): ").lower()
        if overwrite != 'y':
            print("‚ùå .env —Ñ–∞–π–ª—ã ”©–∑–≥–µ—Ä—Ç—ñ–ª–º–µ–¥—ñ.")
            return
    
    bot_token = input("Bot Token –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑ (BotFather-–¥–µ–Ω): ").strip()
    admin_id = input("–ê–¥–º–∏–Ω User ID: ").strip()
    kaspi_phone = input("Kaspi —Ç–µ–ª–µ—Ñ–æ–Ω –Ω”©–º—ñ—Ä—ñ (+7XXXXXXXXXX): ").strip()
    support_username = input("“ö–æ–ª–¥–∞—É username (@username): ").strip()
    
    env_content = f"""# Telegram Bot Configuration
BOT_TOKEN={bot_token}

# Admin Configuration
ADMIN_USER_ID={admin_id}

# Payment Configuration
KASPI_PHONE={kaspi_phone}

# Support Configuration
SUPPORT_USERNAME={support_username}
"""
    
    with open('.env', 'w') as f:
        f.write(env_content)
    
    print("‚úÖ .env —Ñ–∞–π–ª—ã —Å”ô—Ç—Ç—ñ “õ“±—Ä—ã–ª–¥—ã!")

def show_menu():
    """–ë–∞—Å—Ç—ã –º”ô–∑—ñ—Ä"""
    print("\n" + "="*50)
    print("üöñ –®–ï–¢–ü–ï-–ê“ö–¢–ê–£ –¢–ê–ö–°–ò –ë–û–¢ - –û–†–ù–ê–¢–£")
    print("="*50)
    print("\n1. –î–µ—Ä–µ–∫“õ–æ—Ä–¥—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è–ª–∞—É")
    print("2. –ê–¥–º–∏–Ω “õ–æ—Å—É")
    print("3. “ö–∞–∂–µ—Ç—Ç—ñ –ø–∞–∫–µ—Ç—Ç–µ—Ä–¥—ñ —Ç–µ–∫—Å–µ—Ä—É")
    print("4. .env —Ñ–∞–π–ª—ã–Ω “õ“±—Ä—É")
    print("5. –¢–æ–ª—ã“õ –æ—Ä–Ω–∞—Ç—É (–±–∞—Ä–ª—ã“ì—ã)")
    print("0. –®—ã“ì—É")
    print("\n" + "‚îÄ"*50)

def full_setup():
    """–¢–æ–ª—ã“õ –æ—Ä–Ω–∞—Ç—É"""
    print("\nüöÄ –¢–û–õ–´“ö –û–†–ù–ê–¢–£ –ë–ê–°–¢–ê–õ–î–´")
    print("="*50)
    
    # 1. –ü–∞–∫–µ—Ç—Ç–µ—Ä–¥—ñ —Ç–µ–∫—Å–µ—Ä—É
    if not check_requirements():
        print("\n‚ùå –ê–ª–¥—ã–º–µ–Ω “õ–∞–∂–µ—Ç—Ç—ñ –ø–∞–∫–µ—Ç—Ç–µ—Ä–¥—ñ –æ—Ä–Ω–∞—Ç—ã“£—ã–∑!")
        print("–ö–æ–º–∞–Ω–¥–∞: pip install -r requirements.txt")
        return
    
    # 2. –î–µ—Ä–µ–∫“õ–æ—Ä–¥—ã “õ“±—Ä—É
    init_database()
    
    # 3. .env —Ñ–∞–π–ª—ã–Ω “õ“±—Ä—É
    create_env = input("\n.env —Ñ–∞–π–ª—ã–Ω “õ“±—Ä—É –∫–µ—Ä–µ–∫ –ø–µ? (y/n): ").lower()
    if create_env == 'y':
        create_env_file()
    
    # 4. –ê–¥–º–∏–Ω “õ–æ—Å—É
    add_admin_confirm = input("\n–ê–¥–º–∏–Ω “õ–æ—Å—É –∫–µ—Ä–µ–∫ –ø–µ? (y/n): ").lower()
    if add_admin_confirm == 'y':
        add_admin()
    
    print("\n" + "="*50)
    print("‚úÖ –¢–û–õ–´“ö –û–†–ù–ê–¢–£ –ê–Ø“ö–¢–ê–õ–î–´!")
    print("="*50)
    print("\nüìù –ö–µ–ª–µ—Å—ñ “õ–∞–¥–∞–º–¥–∞—Ä:")
    print("1. bot.py —Ñ–∞–π–ª—ã–Ω–¥–∞ BOT_TOKEN –∞—É—ã—Å—Ç—ã—Ä—ã“£—ã–∑")
    print("2. python bot.py –∫–æ–º–∞–Ω–¥–∞—Å—ã–º–µ–Ω –±–æ—Ç—Ç—ã —ñ—Å–∫–µ “õ–æ—Å—ã“£—ã–∑")
    print("3. Telegram-–¥–∞ –±–æ—Ç“õ–∞ /start –∂—ñ–±–µ—Ä—ñ“£—ñ–∑")
    print("\nüí° –ö–µ“£–µ—Å: –ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥–∞–ª–∞—Ä—ã:")
    print("   /admin - –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—ñ")
    print("   /driver - –ñ“Ø—Ä–≥—ñ–∑—É—à—ñ –ø–∞–Ω–µ–ª—ñ")
    print("   /payment - –¢”©–ª–µ–º –∂–∞—Å–∞—É")

def main():
    """–ë–∞—Å—Ç—ã —Ñ—É–Ω–∫—Ü–∏—è"""
    while True:
        show_menu()
        choice = input("–¢–∞“£–¥–∞—É (0-5): ").strip()
        
        if choice == '1':
            init_database()
        elif choice == '2':
            add_admin()
        elif choice == '3':
            check_requirements()
        elif choice == '4':
            create_env_file()
        elif choice == '5':
            full_setup()
            break
        elif choice == '0':
            print("\nüëã –°–∞—É –±–æ–ª—ã“£—ã–∑!")
            sys.exit(0)
        else:
            print("\n‚ùå “ö–∞—Ç–µ —Ç–∞“£–¥–∞—É! 0-5 –∞—Ä–∞—Å—ã–Ω–∞–Ω —Ç–∞“£–¥–∞“£—ã–∑.")
        
        input("\n–ñ–∞–ª“ì–∞—Å—Ç—ã—Ä—É “Ø—à—ñ–Ω Enter –±–∞—Å—ã“£—ã–∑...")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\nüëã –û—Ä–Ω–∞—Ç—É —Ç–æ“õ—Ç–∞—Ç—ã–ª–¥—ã. –°–∞—É –±–æ–ª—ã“£—ã–∑!")
        sys.exit(0)