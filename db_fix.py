import sqlite3
from datetime import datetime

def check_and_fix_database():
    conn = sqlite3.connect('taxi_bot.db')
    c = conn.cursor()
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n")
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    print("üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã drivers:")
    c.execute("PRAGMA table_info(drivers)")
    columns = c.fetchall()
    for col in columns:
        print(f"  {col[1]} ({col[2]})")
    
    # 2. –ù–∞–π—Ç–∏ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∑–∞–ø–∏—Å–∏
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∑–∞–ø–∏—Å–∏...")
    c.execute("SELECT user_id, full_name, departure_date, departure_time FROM drivers")
    drivers = c.fetchall()
    
    problems = []
    for driver in drivers:
        user_id, name, dep_date, dep_time = driver
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å–ª–∏ departure_date —Å–æ–¥–µ—Ä–∂–∏—Ç ':'
        if dep_date and ':' in str(dep_date):
            problems.append((user_id, name, dep_date, dep_time))
            print(f"  ‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞: User {user_id} ({name})")
            print(f"     departure_date = {dep_date} (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –¥–∞—Ç–∞!)")
            print(f"     departure_time = {dep_time} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤—Ä–µ–º—è!)")
    
    if not problems:
        print("  ‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        conn.close()
        return
    
    # 3. –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å
    print(f"\n‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ {len(problems)} –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π")
    action = input("\n–ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å?\n1 - –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∑–∞–ø–∏—Å–∏\n2 - –¢–æ–ª—å–∫–æ –ø–æ–∫–∞–∑–∞—Ç—å\n0 - –í—ã—Ö–æ–¥\n–í—ã–±–æ—Ä: ")
    
    if action == '1':
        for user_id, name, _, _ in problems:
            c.execute("DELETE FROM bookings WHERE driver_id=?", (user_id,))
            c.execute("DELETE FROM drivers WHERE user_id=?", (user_id,))
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å: {name} (ID: {user_id})")
        conn.commit()
        print("\n‚úÖ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ.")
    
    conn.close()

if __name__ == "__main__":
    check_and_fix_database()